name: Deploy to Google Cloud Run

on:
  push:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: asia-northeast3
  SERVICE_NAME: vcbl-chatbot
  ARTIFACT_HOST: asia-northeast3-docker.pkg.dev
  ARTIFACT_REPO: vcbl-chatbot

jobs:
  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Auth to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Configure Docker to use gcloud as a credential helper
      run: |
        gcloud auth configure-docker gcr.io --quiet
        gcloud auth configure-docker $ARTIFACT_HOST --quiet

    - name: Ensure Artifact Registry repository exists
      run: |
        gcloud artifacts repositories create "$ARTIFACT_REPO" \
          --repository-format=docker \
          --location="$REGION" \
          --description="VCBL Chatbot images" \
          || echo "Repository may already exist. Continuing."

    - name: Build and push Docker image (Artifact Registry)
      run: |
        IMAGE_URI=$ARTIFACT_HOST/$PROJECT_ID/$ARTIFACT_REPO/$SERVICE_NAME:$GITHUB_SHA
        echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
        docker build -t $IMAGE_URI .
        docker push $IMAGE_URI

    - name: Run database migrations
      if: github.ref == 'refs/heads/main'
      run: |
        # 마이그레이션을 위한 임시 Cloud Run Job 생성 및 실행
        gcloud run jobs create vcbl-migrate-$GITHUB_SHA \
          --image $IMAGE_URI \
          --region $REGION \
          --set-env-vars FLASK_ENV=production,CLOUD_SQL_INSTANCE=$PROJECT_ID:asia-northeast3:vcbl-chatbot-db,DB_USER=vcbl_user,DB_NAME=vcbl_chatbot \
          --set-cloudsql-instances $PROJECT_ID:asia-northeast3:vcbl-chatbot-db \
          --set-secrets DB_PASSWORD=vcbl-db-password:latest,OPENAI_API_KEY=vcbl-openai-key:latest,SECRET_KEY=vcbl-secret-key:latest,JWT_SECRET_KEY=vcbl-jwt-secret:latest \
          --command flask \
          --args db,upgrade \
          --max-retries 3 \
          --parallelism 1 \
          --task-count 1
        
        # 마이그레이션 실행
        gcloud run jobs execute vcbl-migrate-$GITHUB_SHA --region $REGION --wait
        
        # 임시 Job 삭제
        gcloud run jobs delete vcbl-migrate-$GITHUB_SHA --region $REGION --quiet

    - name: Deploy to Cloud Run
      if: github.ref == 'refs/heads/main'
      run: |
        gcloud run deploy $SERVICE_NAME \
          --image $IMAGE_URI \
          --platform managed \
          --region $REGION \
          --allow-unauthenticated \
          --port 8080 \
          --memory 2Gi \
          --cpu 2 \
          --max-instances 10 \
          --min-instances 1 \
          --timeout 300 \
          --concurrency 80 \
          --set-env-vars FLASK_ENV=production,CLOUD_SQL_INSTANCE=$PROJECT_ID:asia-northeast3:vcbl-chatbot-db,DB_USER=vcbl_user,DB_NAME=vcbl_chatbot,CORS_ORIGINS=https://vcbl-chatbot-439778352765.asia-northeast3.run.app \
          --set-cloudsql-instances $PROJECT_ID:asia-northeast3:vcbl-chatbot-db \
          --set-secrets DB_PASSWORD=vcbl-db-password:latest,OPENAI_API_KEY=vcbl-openai-key:latest,SECRET_KEY=vcbl-secret-key:latest,JWT_SECRET_KEY=vcbl-jwt-secret:latest

    - name: Show service URL
      if: github.ref == 'refs/heads/main'
      run: |
        echo "Service deployed at:"
        gcloud run services describe $SERVICE_NAME --region $REGION --format 'value(status.url)'