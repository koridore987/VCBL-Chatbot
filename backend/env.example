# ==============================================
# VCBL Chatbot - 환경 변수 예제
# ==============================================
# 이 파일을 .env로 복사하고 실제 값으로 수정하세요.

# ==============================================
# 애플리케이션 설정
# ==============================================

# Flask 환경 (development, production, testing)
FLASK_ENV=development

# 서버 포트 (기본값: 8080)
PORT=8080

# ==============================================
# 보안 설정
# ==============================================

# SECRET_KEY: Flask 세션 암호화용 (최소 32자 권장)
# 생성 방법: python -c "import secrets; print(secrets.token_hex(32))"
SECRET_KEY=your-secret-key-change-in-production-min-32-chars

# JWT_SECRET_KEY: JWT 토큰 서명용 (최소 32자 권장)
# 별도로 설정하지 않으면 SECRET_KEY를 사용
JWT_SECRET_KEY=your-jwt-secret-key-change-in-production-min-32-chars

# JWT 토큰 만료 시간 (일)
JWT_ACCESS_TOKEN_EXPIRES_DAYS=7

# ==============================================
# 데이터베이스 설정
# ==============================================

# --- 로컬 개발 (SQLite) ---
# DATABASE_URL=sqlite:///vcbl_chatbot.db

# --- 로컬 개발 (PostgreSQL with Docker) ---
DATABASE_URL=postgresql://vcbl_user:vcbl_dev_password@localhost:5432/vcbl_chatbot

# --- Cloud SQL (Unix 소켓) ---
# Cloud Run에서 자동으로 설정됨
# CLOUD_SQL_INSTANCE=project-id:region:instance-name
# DB_USER=vcbl_user
# DB_PASSWORD=your-db-password
# DB_NAME=vcbl_chatbot

# --- 외부 PostgreSQL (직접 연결) ---
# DATABASE_URL=postgresql://username:password@host:port/database

# ==============================================
# OpenAI 설정
# ==============================================

# OpenAI API 키
OPENAI_API_KEY=sk-your-openai-api-key-here

# 사용할 모델 (gpt-4o-mini, gpt-4, gpt-3.5-turbo 등)
MODEL_NAME=gpt-4o-mini

# 대화 요약 트리거 토큰 수
SUMMARY_TRIGGER_TOKENS=3500

# 요청당 최대 토큰 수
MAX_TOKENS_PER_REQUEST=4000

# 응답 최대 토큰 수
MAX_TOKENS_OUTPUT=1000

# OpenAI API 타임아웃 (초)
OPENAI_TIMEOUT=30

# OpenAI API 재시도 횟수
OPENAI_MAX_RETRIES=3

# ==============================================
# 토큰 제한
# ==============================================

# 일일 토큰 사용 제한
DAILY_TOKEN_LIMIT=50000

# ==============================================
# CORS 설정
# ==============================================

# 허용할 Origin (쉼표로 구분)
# 개발 환경
CORS_ORIGINS=http://localhost:5173,http://localhost:3000

# 프로덕션 환경 예시
# CORS_ORIGINS=https://your-domain.com,https://www.your-domain.com

# ==============================================
# Rate Limiting
# ==============================================

# Redis URL (Rate Limiting 저장소)
# 로컬 개발 (메모리)
REDIS_URL=memory://

# Docker Compose 사용 시
# REDIS_URL=redis://redis:6379/0

# 외부 Redis 사용 시
# REDIS_URL=redis://username:password@host:port/db

# Rate Limiting 기본 설정
RATELIMIT_DEFAULT=100 per minute

# ==============================================
# 로깅
# ==============================================

# 로그 레벨 (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# ==============================================
# 입력 검증 제한
# ==============================================

# 메시지 최대 길이
MAX_MESSAGE_LENGTH=2000

# 이름 최대 길이
MAX_NAME_LENGTH=100

# 학번 최대 길이
MAX_STUDENT_ID_LENGTH=50

# 비밀번호 최소 길이
MIN_PASSWORD_LENGTH=8

# 비밀번호 최대 길이
MAX_PASSWORD_LENGTH=128

# ==============================================
# Google Cloud 설정 (프로덕션)
# ==============================================

# Google Cloud 프로젝트 ID
# GCP_PROJECT_ID=your-project-id

# Google Cloud 리전
# GCP_REGION=asia-northeast3

# ==============================================
# Docker 개발 환경 설정
# ==============================================

# PostgreSQL 설정 (docker-compose.yml에서 사용)
DB_PASSWORD=vcbl_dev_password

# 워커 수 (Gunicorn)
# WORKERS=4
